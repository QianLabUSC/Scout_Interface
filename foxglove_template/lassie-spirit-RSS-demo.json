{
  "configById": {
    "Plot!4dytizu": {
      "paths": [
        {
          "timestampMethod": "receiveTime",
          "value": "/spirit/raw_measurements.front_left_leg.pene_force",
          "enabled": true,
          "color": "#4e98e2",
          "label": "FL"
        },
        {
          "timestampMethod": "receiveTime",
          "value": "/spirit/raw_measurements.front_right_leg.pene_force",
          "enabled": true,
          "color": "#f5774d",
          "label": "FR"
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Force vs Time",
      "timeWindowMode": "sliding",
      "followingViewWidth": 10
    },
    "Plot!10l2t9v": {
      "paths": [
        {
          "timestampMethod": "receiveTime",
          "value": "/spirit/raw_pene_measurements.front_left_leg.pene_force",
          "enabled": true,
          "color": "#4e98e2",
          "label": "FL",
          "showLine": true,
          "lineSize": 2.495
        },
        {
          "timestampMethod": "receiveTime",
          "value": "/spirit/raw_pene_measurements.front_right_leg.pene_force",
          "enabled": true,
          "color": "#f5774d",
          "label": "FR",
          "showLine": true,
          "lineSize": 3.138
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Cropped force vs Time",
      "timeWindowMode": "sliding",
      "followingViewWidth": 10
    },
    "Plot!1fw6r47": {
      "paths": [
        {
          "timestampMethod": "receiveTime",
          "value": "/spirit/spatial_measurements.uncertainty",
          "enabled": true,
          "color": "#4e98e2",
          "label": "FL",
          "showLine": true,
          "lineSize": 2.495
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Estimation uncertainty",
      "timeWindowMode": "sliding",
      "followingViewWidth": 10
    },
    "Plot!4bhrthb": {
      "paths": [
        {
          "timestampMethod": "publishTime",
          "value": "/spirit/spatial_measurements.value",
          "enabled": true,
          "color": "#4e98e2",
          "label": "FL",
          "lineSize": 2.9877,
          "showLine": false
        }
      ],
      "showXAxisLabels": true,
      "showYAxisLabels": true,
      "showLegend": true,
      "legendDisplay": "floating",
      "showPlotValuesInLegend": false,
      "isSynced": true,
      "xAxisVal": "timestamp",
      "sidebarDimension": 240,
      "foxglovePanelTitle": "Stiffness vs Step",
      "minYValue": 0,
      "maxYValue": 35368.11,
      "timeWindowMode": "sliding",
      "followingViewWidth": 100
    },
    "RosOut!ar7z8c": {
      "searchTerms": [],
      "minLogLevel": 1,
      "nameFilter": {}
    },
    "3D!2oa13l8": {
      "cameraState": {
        "perspective": false,
        "distance": 13.966745921871446,
        "phi": 37.047028635725546,
        "thetaOffset": 3.7494546959423674,
        "targetOffset": [
          0.976099511721959,
          2.579152919270088,
          -1.4262996837959339
        ],
        "target": [
          0,
          0,
          0
        ],
        "targetOrientation": [
          0,
          0,
          0,
          1
        ],
        "fovy": 45,
        "near": 0.5,
        "far": 4991,
        "logDepth": true
      },
      "followMode": "follow-none",
      "scene": {
        "syncCamera": false,
        "ignoreColladaUpAxis": false,
        "backgroundColor": "#524c4c",
        "labelScaleFactor": 1.7,
        "meshUpAxis": "y_up",
        "transforms": {
          "labelSize": 0.01
        }
      },
      "transforms": {},
      "topics": {
        "/measurements_markers": {
          "visible": true
        },
        "/terrain_map": {
          "visible": true,
          "colorField": "value",
          "colorMode": "rgba-fields",
          "colorMap": "turbo"
        },
        "/scouting_mapping/extrapolated_map": {
          "visible": true,
          "colorField": "value",
          "colorMode": "rgba-fields",
          "colorMap": "turbo"
        },
        "/scout_mapping/spatial_measurements_markers": {
          "visible": true,
          "color": "#3ca90dff",
          "showOutlines": true
        }
      },
      "layers": {
        "grid": {
          "visible": false,
          "frameLocked": true,
          "label": "Grid",
          "instanceId": "9be0c8ea-fc77-41ce-93f3-fbbeac9300e9",
          "layerId": "foxglove.Grid",
          "size": 10,
          "lineWidth": 1,
          "color": "#248eff",
          "position": [
            0,
            0,
            0
          ],
          "rotation": [
            0,
            0,
            0
          ],
          "divisions": 10
        }
      },
      "publish": {
        "type": "point",
        "poseTopic": "/move_base_simple/goal",
        "pointTopic": "/clicked_point",
        "poseEstimateTopic": "/initialpose",
        "poseEstimateXDeviation": 0.5,
        "poseEstimateYDeviation": 0.5,
        "poseEstimateThetaDeviation": 0.26179939
      },
      "imageMode": {},
      "foxglovePanelTitle": "Risk Map"
    },
    "Image!212l19u": {
      "cameraState": {
        "distance": 20,
        "perspective": true,
        "phi": 60,
        "target": [
          0,
          0,
          0
        ],
        "targetOffset": [
          0,
          0,
          0
        ],
        "targetOrientation": [
          0,
          0,
          0,
          1
        ],
        "thetaOffset": 45,
        "fovy": 45,
        "near": 0.5,
        "far": 5000
      },
      "followMode": "follow-pose",
      "scene": {},
      "transforms": {},
      "topics": {},
      "layers": {},
      "publish": {
        "type": "point",
        "poseTopic": "/move_base_simple/goal",
        "pointTopic": "/clicked_point",
        "poseEstimateTopic": "/initialpose",
        "poseEstimateXDeviation": 0.5,
        "poseEstimateYDeviation": 0.5,
        "poseEstimateThetaDeviation": 0.26179939
      },
      "imageMode": {
        "imageTopic": "/scouting_mapping/extrapolated_map_colorbar"
      }
    },
    "SourceInfo!ektq6e": {},
    "RawMessages!1h6226c": {
      "diffEnabled": false,
      "diffMethod": "custom",
      "diffTopicPath": "",
      "showFullMessageForDiff": false,
      "topicPath": "/spirit/state_low_speed",
      "fontSize": 12
    },
    "TopicGraph!hd7ouv": {},
    "Tab!1hjb5z2": {
      "activeTabIdx": 0,
      "tabs": [
        {
          "title": "Visualization control",
          "layout": {
            "first": {
              "first": {
                "first": "Plot!4dytizu",
                "second": {
                  "first": "Plot!10l2t9v",
                  "second": "Plot!1fw6r47",
                  "direction": "column"
                },
                "direction": "column",
                "splitPercentage": 45.02074688796681
              },
              "second": {
                "first": "Plot!4bhrthb",
                "second": "RosOut!ar7z8c",
                "direction": "column",
                "splitPercentage": 76.17391304347828
              },
              "direction": "column",
              "splitPercentage": 70.6043956043956
            },
            "second": {
              "first": {
                "first": "3D!2oa13l8",
                "second": "map!43o58sj",
                "direction": "row"
              },
              "second": "Image!212l19u",
              "direction": "column",
              "splitPercentage": 91.28065395095368
            },
            "direction": "row",
            "splitPercentage": 34.61123110151188
          }
        },
        {
          "title": "Debug",
          "layout": {
            "first": {
              "first": "SourceInfo!ektq6e",
              "second": "RawMessages!1h6226c",
              "direction": "column"
            },
            "second": "TopicGraph!hd7ouv",
            "direction": "row"
          }
        }
      ]
    },
    "map!43o58sj": {
      "customTileUrl": "",
      "disabledTopics": [],
      "followTopic": "",
      "layer": "satellite",
      "topicColors": {},
      "zoomLevel": 10,
      "maxNativeZoom": 18,
      "topicConfig": {}
    }
  },
  "globalVariables": {
    "globalVariable": 4,
    "": "\"\"",
    "test": 8
  },
  "userNodes": {
    "ffc14330-8948-45f9-be0c-8bf9ea77368f": {
      "sourceCode": "// The ./types module provides helper types for your Input events and messages.\nimport { Input, Message } from \"./types\";\n\n// Your script can output well-known message types, any of your custom message types, or\n// complete custom message types.\n//\n// Use `Message` to access your data source types or well-known types:\n// type Twist = Message<\"geometry_msgs/Twist\">;\n//\n// Conventionally, it's common to make a _type alias_ for your script's output type\n// and use that type name as the return type for your script function.\n// Here we've called the type `Output` but you can pick any type name.\ntype Output = {\n  hello: string;\n};\n\n// These are the topics your script \"subscribes\" to. Studio will invoke your script function\n// when any message is received on one of these topics.\nexport const inputs = [\"/input/topic\"];\n\n// Any output your script produces is \"published\" to this topic. Published messages are only visible within Studio, not to your original data source.\nexport const output = \"/studio_script/output_topic\";\n\n// This function is called with messages from your input topics.\n// The first argument is an event with the topic, receive time, and message.\n// Use the `Input<...>` helper to get the correct event type for your input topic messages.\nexport default function script(event: Input<\"/input/topic\">): Output {\n  return {\n    hello: \"world!\",\n  };\n};",
      "name": "ffc14330"
    },
    "98c97f95-e13d-49a8-aa30-7d939567d29a": {
      "sourceCode": "// The ./types module provides helper types for your Input events and messages.\nimport { Input, Message } from \"./types\";\n\n// Your script can output well-known message types, any of your custom message types, or\n// complete custom message types.\n//\n// Use `Message` to access your data source types or well-known types:\n// type Twist = Message<\"geometry_msgs/Twist\">;\n//\n// Conventionally, it's common to make a _type alias_ for your script's output type\n// and use that type name as the return type for your script function.\n// Here we've called the type `Output` but you can pick any type name.\ntype Output = {\n  hello: string;\n};\n\n// These are the topics your script \"subscribes\" to. Studio will invoke your script function\n// when any message is received on one of these topics.\nexport const inputs = [\"/input/topic\"];\n\n// Any output your script produces is \"published\" to this topic. Published messages are only visible within Studio, not to your original data source.\nexport const output = \"/studio_script/output_topic\";\n\n// This function is called with messages from your input topics.\n// The first argument is an event with the topic, receive time, and message.\n// Use the `Input<...>` helper to get the correct event type for your input topic messages.\nexport default function script(event: Input<\"/input/topic\">): Output {\n  return {\n    hello: \"world!\",\n  };\n};",
      "name": "98c97f95"
    },
    "92ca2133-5fc8-42d1-af59-6a4a8c986b78": {
      "sourceCode": "",
      "name": "92ca2133"
    },
    "337e0f46-2d44-47b9-846c-46f73c55ff4d": {
      "sourceCode": "1. BLUE TO RED COLOR MAP -> estimated stiffness map \n2. MARKER -> stiffness measurements Array\n3. 50% TRANSPARENT -> locations where uncertainty is higher than 50%",
      "name": "337e0f46"
    }
  },
  "playbackConfig": {
    "speed": 1
  },
  "layout": "Tab!1hjb5z2"
}